#cloud-config
## See examples: https://github.com/canonical/cloud-init/tree/main/doc/examples

## Hostname is automatically replaced with virt-cloud-init.sh script upon execution
hostname: worker1
locale: en_US.UTF-8

## Disable ssh access as root.
disable_root: true

## If you want to allow SSH with password, set this to true
ssh_pwauth: false

## users[0] (the first user in users) overrides the user directive.
users:
  - name: node
    gecos: Kubernetes Clustorious
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, adm
    shell: /bin/fish
    lock_passwd: false
    ## Generate with:
    ## $ mkpasswd --method=SHA-512 --rounds=4096
    hashed_passwd: |
      $6$rounds=4096$NPd89fonz.O5yZ8D$hAE6oVYS6Li/ZvY9.89AN4oN.Uwc4CmkAFw9cVmEhNaBFwVnwffTF5uc13kPF1qUQzLrRyxgMJ.XkYvjfV7250
    ## Or use plaintext
    ## plain_text_passwd: master
    ssh_authorized_keys:
      - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCgyiRBh2ii5UXec3syW1oGOQjNFFBDVOtszG7V5R4noVmYppiYWIcWpd2H+J779BrjtupEW261hp4SR2JRCfuUhY9pJ8bk6CEbNlfPamyDAbgQawA8WfAyTctw84jt5oAbCKQWN0voHG0pZ+VUQUh2OhmPc/xtWVH017UURMA+4Wb46GxC0KAbYadR08FST7/Hrk7ahpkIRVx+5KLxzxLmKeS82jFXKMkmHUt6ZhaO/DlHuA4OkuqxWSdrOhU9wsp3l4vt2ynDsm9+m8gC5UpSeSyILzsf95NBCVN3HinVP/ItSKdW96Aj2g8l1arYgxWpb28S7z3JDEvF5k6vbygR3rbKlL5Ie3K9h5EWk4gSon95Q95v4n/DOgalkFhnXyuMpb8leIHxvphYtBfprH012QrrRom3JKQCeoTpdjjhJ8IaV32Ty+AWxne9YpnzW06u1GuWAIuNHbZeUiAiAOdcMrfxKCjblww8+aHCY8jMaoVQRiyUOkE/yjFXQVXdRU0= iac master key"

## Env variables
write_files:
  - path: /etc/environment
    content: |
      VM_USER=node
    append: true
  - path: /etc/motd
    ## https://patorjk.com/software/taag/#p=display&v=0&f=Slan
    content: |
      ___  _____  ____ _____ _                           
      | | / / _ \/ __ `/ __ `/
      | |/ /  __/ /_/ / /_/ /
      |___/\___/\__, /\__,_/
              /____/                                                                                     
              __           __                                
        _____/ /_  _______/ /____  _____                     
       / ___/ / / / / ___/ __/ _ \/ ___/                     
      / /__/ / /_/ (__  ) /_/  __/ /                         
      \___/_/\__,_/____/\__/\___/_/
    append: false

## List of packages to install after the VM comes up
package_upgrade: true
package_reboot_if_required: true
package_update: true
packages:
  ## KVM quest agent
  - qemu-guest-agent
  ## Apt repo misc
  - software-properties-common
  - apt-transport-https
  - ca-certificates
  - gnupg2
  - gpg
  ## Tools
  - curl
  - wget
  - htop
  - git
  - vim
  - net-tools
  - tmux
  ## Extra rice
  - fzf
  - exa
  - bat
  - upx
  - jq

runcmd:
  ## EXTRA RICE
  ## Add latest Fish repo
  - echo 'deb http://download.opensuse.org/repositories/shells:/fish:/release:/3/Debian_11/ /' | sudo tee /etc/apt/sources.list.d/shells:fish:release:3.list
  - curl -fsSL https://download.opensuse.org/repositories/shells:fish:release:3/Debian_11/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/shells_fish_release_3.gpg > /dev/null
  - sudo apt update
  - sudo apt install -y fish
  ## Install starship
  - export FORCE=1 && curl -sS https://starship.rs/install.sh | sh
  ## Install mcfly for command history
  - curl -LSfs https://raw.githubusercontent.com/cantino/mcfly/master/ci/install.sh | sh -s -- --git cantino/mcfly
  ## Link batcat to cat
  - ln -s /usr/bin/batcat /usr/local/bin/bat
  ## Dotfiles
  - git clone https://github.com/mbrav/dotfiles /tmp/dotfiles
  - cp -r /tmp/dotfiles/dotfiles/.config /home/node/
  - cp -r /tmp/dotfiles/dotfiles/.vimrc /home/node/
  - cp -r /tmp/dotfiles/dotfiles/.bashrc /home/node/
  - chown -R node:node /home/node
  ## SETTINGS
  ## Disable swap
  - swapoff -a
  ## Enable ssh
  - systemctl enable ssh
  - systemctl start ssh
  ## Setup ipv forward, etc
  - modprobe overlay -v
  - modprobe br_netfilter -v
  - echo 1 > /proc/sys/net/ipv4/ip_forward
  ## KUBELET
  ## Install Kubelet
  - mkdir /etc/apt/keyrings
  - sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
  - echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  - apt-get update
  - apt-get install -y kubelet kubeadm kubectl
  - apt-mark hold kubelet kubeadm kubectl
  ## CRI-O CONTAINER RUNITME
  ## Install cri-o container runtime
  - export OS=Debian_11
  - export VERSION=1.24
  - echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
  - echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list
  - curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/Release.key | apt-key add -
  - curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | apt-key add -
  - apt-get update
  - apt-get install -y cri-o cri-o-runc
  ## Enable and start crio runtime on boot
  - systemctl enable crio
  - systemctl start crio

## Expand partition
growpart:
  mode: auto
  devices: ["/"]

## Written to /var/log/cloud-init-output.log
final_message: "The system is finally up, after $UPTIME seconds"
